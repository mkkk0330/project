<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.crm.dao.RepairMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Repair">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="building_id" jdbcType="VARCHAR" property="buildingId" />
    <result column="name" jdbcType="INTEGER" property="name" />
    <result column="illustrate" jdbcType="VARCHAR" property="illustrate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, building_id, name, illustrate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repair
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repair
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.crm.vo.Repair">
    insert into repair (id, building_id, name, 
      illustrate)
    values (#{id,jdbcType=INTEGER}, #{buildingId,jdbcType=VARCHAR}, #{name,jdbcType=INTEGER}, 
      #{illustrate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Repair">
    insert into repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="illustrate != null">
        illustrate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=INTEGER},
      </if>
      <if test="illustrate != null">
        #{illustrate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Repair">
    update repair
    <set>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=INTEGER},
      </if>
      <if test="illustrate != null">
        illustrate = #{illustrate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Repair">
    update repair
    set building_id = #{buildingId,jdbcType=VARCHAR},
      name = #{name,jdbcType=INTEGER},
      illustrate = #{illustrate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryRepairList" resultType="com.xxxx.crm.vo.Repair">
    select
        <include refid="Base_Column_List"/>
    from
        repair
  </select>

  <select id="queryRepairListByParams" resultType="com.xxxx.crm.vo.Repair">
    select
        <include refid="Base_Column_List"/>
    from
        repair
    where
        1=1
    <if test="buildingId!=null and buildingId!=''">
      and building_id = #{buildingId}
    </if>
    <if test="name!=null and name!=''">
      and name = #{name}
    </if>
    <if test="illustrate!=null and illustrate!=''">
      and illustrate like concat('%',#{illustrate},'%')
    </if>
  </select>

  <delete id="deleteRepairByIds" >
    delete  from
        repair
    where
          id
    in
      <foreach collection="array" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
  </delete>
</mapper>