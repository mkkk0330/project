<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.crm.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="dormitory_id" property="dormitoryId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, number, name, gender, dormitory_id, state, create_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.crm.vo.Student" >
    insert into student (id, number, name,
      gender, dormitory_id, state,
      create_date)
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{gender,jdbcType=VARCHAR}, #{dormitoryId,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR},
      #{createDate,jdbcType=VARCHAR})
  </insert>

  <!--添加学生-->
  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="dormitoryId != null" >
        dormitory_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryId != null" >
        #{dormitoryId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Student" >
    update student
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryId != null" >
        dormitory_id = #{dormitoryId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Student" >
    update student
    set number = #{number,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      dormitory_id = #{dormitoryId,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询所有的学生信息-->
  <select id="selectByParams"  resultType="com.xxxx.crm.vo.Student" parameterType="com.xxxx.crm.query.StudentQuery">
    select
    <include refid="Base_Column_List"/>
    from
    student
    where
    1=1
    <if test="name !=null and name !=''">
      and name like concat('%',#{name},'%')
    </if>
    <if test="dormitoryId !=null and dormitoryId !=''">
      and dormitory_id = #{dormitoryId}
    </if>
    <if test="state !=null and state !=''">
      and state = #{state}
    </if>
  </select>

  <!--批量删除-->
  <delete id="deleteBatch">
    delete from
        student
    where
        id
    in
    <foreach collection="array" item="item" open="("   separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>