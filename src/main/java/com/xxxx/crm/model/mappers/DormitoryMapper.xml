<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.crm.dao.DormitoryMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Dormitory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="building_id" property="buildingId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="available" property="available" jdbcType="INTEGER" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, building_id, name, type, available, telephone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dormitory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dormitory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.crm.vo.Dormitory" >
    insert into dormitory (id, building_id, name, 
      type, available, telephone
      )
    values (#{id,jdbcType=INTEGER}, #{buildingId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{available,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Dormitory" >
    insert into dormitory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="available != null" >
        available,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Dormitory" >
    update dormitory
    <set >
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Dormitory" >
    update dormitory
    set building_id = #{buildingId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="queryRepairListByParams" parameterType="com.xxxx.crm.vo.Dormitory" resultType="com.xxxx.crm.vo.Dormitory" >
    select
        <include refid="Base_Column_List"/>
    from
        dormitory
    where 1=1
    <if test="name!=null and name!=''">
      and name = #{name}
    </if>
    <if test="type!=null and type!=''">
      and type = #{type}
    </if>
    <if test="available!=null and available!=''">
      and available = #{available}
    </if>
  </select>

  <delete id="deleteBatch" >
    delete from
     dormitory
    where
     id
     in
    <foreach collection="array" item="item" open="("   separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <!--查询宿舍的名字-->
  <select id="listDormitory" resultType="list">
    select name from dormitory
  </select>
</mapper>